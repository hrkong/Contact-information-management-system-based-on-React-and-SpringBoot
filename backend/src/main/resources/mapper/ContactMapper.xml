<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.sdu.ise.labs.dao.ContactMapper">
    <resultMap id="BaseResultMap" type="cn.edu.sdu.ise.labs.model.Contact">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="contact_name" property="contactName" jdbcType="VARCHAR"/>
        <result column="contact_unit" property="contactUnit" jdbcType="VARCHAR"/>
        <result column="contact_number" property="contactNumber" jdbcType="VARCHAR"/>
        <result column="contact_province" property="contactProvince" jdbcType="VARCHAR"/>
        <result column="contact_email" property="contactEmail" jdbcType="VARCHAR"/>
        <result column="contact_location" property="contactLocation" jdbcType="VARCHAR"/>

    </resultMap>
    <resultMap id="ProvinceResultMap" type="cn.edu.sdu.ise.labs.model.Province">
        <result column="province" property="province" jdbcType="VARCHAR"/>
        <result column="number" property="number" jdbcType="INTEGER"/>


    </resultMap>
    <sql id="Base_Column_List">
        id
        , contact_name, contact_unit, contact_number, contact_province, contact_email,
    contact_location
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from contact
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from contact
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="cn.edu.sdu.ise.labs.model.Contact">
        insert into contact (id, contact_name, contact_unit,
                             contact_number, contact_province, contact_email,
                             contact_location)
        values (#{id,jdbcType=INTEGER}, #{contactName,jdbcType=VARCHAR}, #{contactUnit,jdbcType=VARCHAR},
                #{contactNumber,jdbcType=VARCHAR}, #{contactProvince,jdbcType=VARCHAR},
                #{contactEmail,jdbcType=VARCHAR},
                #{contactLocation,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="cn.edu.sdu.ise.labs.model.Contact">
        insert into contact
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="contactName != null">
                contact_name,
            </if>
            <if test="contactUnit != null">
                contact_unit,
            </if>
            <if test="contactNumber != null">
                contact_number,
            </if>
            <if test="contactProvince != null">
                contact_province,
            </if>
            <if test="contactEmail != null">
                contact_email,
            </if>
            <if test="contactLocation != null">
                contact_location,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="contactName != null">
                #{contactName,jdbcType=VARCHAR},
            </if>
            <if test="contactUnit != null">
                #{contactUnit,jdbcType=VARCHAR},
            </if>
            <if test="contactNumber != null">
                #{contactNumber,jdbcType=VARCHAR},
            </if>
            <if test="contactProvince != null">
                #{contactProvince,jdbcType=VARCHAR},
            </if>
            <if test="contactEmail != null">
                #{contactEmail,jdbcType=VARCHAR},
            </if>
            <if test="contactLocation != null">
                #{contactLocation,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.sdu.ise.labs.model.Contact">
        update contact
        <set>
            <if test="contactName != null">
                contact_name = #{contactName,jdbcType=VARCHAR},
            </if>
            <if test="contactUnit != null">
                contact_unit = #{contactUnit,jdbcType=VARCHAR},
            </if>
            <if test="contactNumber != null">
                contact_number = #{contactNumber,jdbcType=VARCHAR},
            </if>
            <if test="contactProvince != null">
                contact_province = #{contactProvince,jdbcType=VARCHAR},
            </if>
            <if test="contactEmail != null">
                contact_email = #{contactEmail,jdbcType=VARCHAR},
            </if>
            <if test="contactLocation != null">
                contact_location = #{contactLocation,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.edu.sdu.ise.labs.model.Contact">
        update contact
        set contact_name     = #{contactName,jdbcType=VARCHAR},
            contact_unit     = #{contactUnit,jdbcType=VARCHAR},
            contact_number   = #{contactNumber,jdbcType=VARCHAR},
            contact_province = #{contactProvince,jdbcType=VARCHAR},
            contact_email    = #{contactEmail,jdbcType=VARCHAR},
            contact_location = #{contactLocation,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <!-- 获取名字个数(分页) -->
    <select id="count" resultType="integer">
        select count(*)
        from contact
        <where>
            <if test="contactName != null">
                contact_name like #{contactName}
            </if>

            <if test="contactUnit != null">
                or contact_unit like #{contactUnit}
            </if>

            <if test="contactProvince != null">
                or contact_province like #{contactProvince}
            </if>

            <if test="contactNumber != null">
                or contact_number like #{contactNumber}
            </if>

            <if test="contactEmail != null">
                or contact_email like #{contactEmail}
            </if>

            <if test="contactLocation != null">
                or contact_location like #{contactLocation}
            </if>
        </where>
    </select>

    <!-- 获取部门(分页) -->
    <select id="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from contact
        <where>
            <if test="queryDTO.contactName != null">
                contact_name like #{queryDTO.contactName}
            </if>

            <if test="queryDTO.contactUnit != null">
                or contact_unit like #{queryDTO.contactUnit}
            </if>

            <if test="queryDTO.contactNumber != null">
                or contact_number like #{queryDTO.contactNumber}
            </if>

            <if test="queryDTO.contactProvince != null">
                or contact_province like #{queryDTO.contactProvince}
            </if>

            <if test="queryDTO.contactEmail != null">
                or contact_email like #{queryDTO.contactEmail}
            </if>

            <if test="queryDTO.contactLocation != null">
                or contact_location like #{queryDTO.contactLocation}
            </if>
        </where>
        limit #{offset}, #{limit}
    </select>

    <!-- 批量删除 -->
    <update id="deleteByCodes">
        delete from contact
        where id in
        <foreach item="item" index="index" collection="codeList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!-- 省份人数计算 -->
    <select id="calculate" resultMap="ProvinceResultMap">
        select contact_province as province, count(*) as number
        from contact
        group by contact_province
    </select>

</mapper>